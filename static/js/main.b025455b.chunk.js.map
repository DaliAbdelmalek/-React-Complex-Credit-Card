{"version":3,"sources":["components/images/pus.png","components/images/CreditCard.png1.png","components/creditcard.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Creditcard","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","reset","setState","name","number","month","year","state","n","target","value","match","alert","c","isNaN","m","y","react_default","a","createElement","className","src","img2","padEnd","split","map","x","i","join","img3","type","maxLength","onChange","nameChange","bind","numberChange","monthChange","yearChange","onClick","Component","App","components_creditcard","Boolean","window","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b025455b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pus.a8c8030b.png\";","module.exports = __webpack_public_path__ + \"static/media/CreditCard.png1.a4143a28.png\";","import React, { Component } from 'react';\r\nimport './creditcard.css'\r\nimport img2 from './images/pus.png'\r\nimport img3 from './images/CreditCard.png1.png'\r\nclass Creditcard extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            name: '',\r\n            number: '',\r\n            month: '',\r\n            year: '',\r\n        }\r\n    }\r\n    //Cardholder\r\n    nameChange(n) {\r\n        let X= /^[A-Z a-z]+$/;\r\n        if (n.target.value.match(X)){\r\n           this.setState({\r\n            name: n.target.value\r\n        });  \r\n        }else{alert ('Not a character')} \r\n       \r\n    }\r\n    //Number\r\n    numberChange(c) {\r\n        if (isNaN(c.target.value)){alert  ('Not a number')} \r\n        else{\r\n            this.setState({\r\n            number: c.target.value\r\n        });\r\n        }\r\n        \r\n    }\r\n    //Expiration\r\n    monthChange(m) {\r\n        if (isNaN(m.target.value)){alert  ('Not a number')}\r\n        else{\r\n            this.setState({\r\n            month: m.target.value\r\n        });\r\n        }\r\n        \r\n    }\r\n    yearChange(y) {\r\n        if (isNaN(y.target.value)){alert  ('Not a number')}\r\n        else{\r\n            this.setState({\r\n            year: y.target.value\r\n        });\r\n        }\r\n        \r\n    }\r\n    reset = () => {\r\n        this.setState({\r\n            name: '',\r\n            number: '',\r\n            month: '',\r\n            year: '',\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <div className='cart' >\r\n                <div className='titre'>\r\n                    <p>CREDIT CARD</p>\r\n                </div>\r\n                <div className='pus'>\r\n                    <img src={img2} />\r\n                </div>\r\n                <div className='container'>\r\n                    <div className='part1'>\r\n                        <div className='numero'>\r\n                            <span>{this.state.number.padEnd(16,'*').split('').map((x,i)=>{return i%4===0 ?\" \"+x:x}).join('')}</span>\r\n                        </div>\r\n                        <div className='contenue'>\r\n                            <div className='info'>\r\n                                <div>\r\n                                    <span>CARDHOLDER</span>\r\n                                    <p>{this.state.name.padEnd(20,'-')}</p>\r\n                                </div>\r\n                            </div>\r\n                            <div className='valid'>\r\n                                <div className='thru'>\r\n                                    <span>VALID</span>\r\n                                    <span>THRU</span>\r\n                                </div>\r\n                                <div className='month'>\r\n                                    <p>MONTH/YEAR</p>\r\n                                    <span>{this.state.month.padEnd(2,'-')} / {this.state.year.padEnd(2,'-')}</span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='visa'>\r\n                        <img src={img3} />\r\n                    </div>\r\n\r\n                </div>\r\n                <form>\r\n                <div className='inputs'>\r\n                    <div>\r\n                        <span>CARDHOLDER</span>\r\n                        <input type=\"text\" maxLength=\"20\" onChange={this.nameChange.bind(this)} />\r\n                    </div>\r\n                    <div>\r\n                        <span>NUMBER</span>\r\n                        <input type=\"text\" maxLength=\"16\" onChange={this.numberChange.bind(this)} />\r\n                    </div>\r\n                    <div>\r\n                        <span>MONTH</span>\r\n                        <input type=\"text\" maxLength=\"2\" onChange={this.monthChange.bind(this)} />\r\n                    </div>\r\n                    <div>\r\n                        <span>YEAR</span>\r\n                        <input type=\"text\" maxLength=\"2\" onChange={this.yearChange.bind(this)} />\r\n                    </div>\r\n                </div>\r\n                <div className='reset'>\r\n                    <button onClick={this.reset}>Reset</button>\r\n                </div>\r\n                </form>\r\n            </div>\r\n\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default Creditcard;","import React, { Component } from 'react';\nimport Creditcard from './components/creditcard.js'\nclass App extends Component {\n  state = {  }\n  render() { \n    return ( \n      <div>\n        <Creditcard/>\n      </div>\n     );\n  }\n}\n \nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}